package com.atball.der.search.elasticsearch;

/**
 * ES 集群学习
 */
public class EsClusterLearning {
    /**
     * 1、集群介绍
     *
     *  elasticsearch 是天生支持集群的,他不需要依赖其他的服务发现和注册的组件，如zookeeper这些，
     *  因为他内置了一个名字叫ZenDiscovery的模块，是elasticsearch自己实现的一套用于节点发现和选举等功能的组件，
     *  所以elasticsearch做起集群来非常的简单，不需要太多额外的配置和安装额外的第三方组件。
     *
     *  一个运行中的elasticsearch实例称为一个节点，而集群是由一个或者多个拥有相同cluster.name 配置的节点组成，
     *  他们共同承担数据和负载的压力。当有节点加入集群中或者从集群中移除节点时，集群将会重新平均分布所有数据。
     *
     *
     *  当一个节点被选举称为主节点时，它负责管理集群范围内的所有变更，例如增加、删除索引、或者增加、删除节点等。
     *  而主节点并不需要涉及到文档级别的变更和搜索等操作，所以当集群只拥有一个主节点的情况下，即使流量的增加它也
     *  不会成为瓶颈。任何节点都可以成为主节点。我们示例集群就只有一个节点，所以它同时也成为了主节点。
     *
     *  作为用户，我们可以将请求发送到 集群中的任何节点，包括主节点。每个节点都知道任意文档所处的位置，并且能够将我们的
     *  请求直接转发到存储我们所需文档的节点。无论我们将请求发送到哪个节点，它都能负责从各个包含我们所需文档的节点收集回数据，
     *  并将最终结果返回给客户端。elasticsearch 对这一切的管理都是透明的。
     *
     *
     *  2、集群健康
     *
     *  elasticsearch 的集群监控信息中包含了许多的统计数据，其中最为重要的一项就是 集群健康，它在status字段中
     *  展示为 green、yellow、或者 red。
     *
     *  GET /_cluster/health
     *  status 字段指示着当前集群在总体上是否工作正常。它的三种颜色含义如下：
     *  green： 所有的主分片和副本分片都正常运行。
     *  yellow：所有的主分片都正常运行，但不是所有的副本分片都正常运行。
     *  red：有主分片没能正常运行。
     *
     *  3、分片
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *
     *  6、应对故障
     *
     *  我们关闭的节点是一个主节点。而集群必须拥有一个主节点来保证正常工作，所以发生的第一件事情就是选举一个新的主节点：Node2
     *
     *  在我们关闭 Node1 的同时也失去了主分片 1 和 2，并且在缺失主分片的时候索引索引也也不能正常工作。如果此时来检查集群的状况，
     *  我们看到的状态将会为 red：不是所有主分片都在正常运行。
     *
     *  幸运的是在其他节点上存在着这两个主分片的完整副本，所以新的主节点立即将这些分片在 Node2 和 Node3上对应的副本分片提升主分片，
     *  此时集群的状态将会为 yellow。这个提升主分片的过程是瞬间发生的，如同按下一个开关那般。
     *
     *  为什么我们的集群状态是 yellow 而不是 green呢？ 虽然我们拥有所有的三个主分片，但是同时设置了每个主分片需要对应两份副本分片，
     *  而此时只存在一份副本分片。所以集群不能为 green 的状态。
     *
     *
     *
     *
     *
     *
     *
     *
     */
}
